//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MyDayDataModel", "FK_Actions_1_0", "ActionTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyDay.Data.ActionType), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyDay.Data.Action), true)]
[assembly: EdmRelationshipAttribute("MyDayDataModel", "FK_Tasks_2_0", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyDay.Data.Project), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyDay.Data.Task), true)]
[assembly: EdmRelationshipAttribute("MyDayDataModel", "FK_Tasks_0_0", "TaskStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyDay.Data.TaskStatus), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyDay.Data.Task), true)]
[assembly: EdmRelationshipAttribute("MyDayDataModel", "FK_Tasks_1_0", "TaskTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyDay.Data.TaskType), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyDay.Data.Task), true)]

#endregion

namespace MyDay.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MyDayData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MyDayData object using the connection string found in the 'MyDayData' section of the application configuration file.
        /// </summary>
        public MyDayData() : base("name=MyDayData", "MyDayData")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDayData object.
        /// </summary>
        public MyDayData(string connectionString) : base(connectionString, "MyDayData")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MyDayData object.
        /// </summary>
        public MyDayData(EntityConnection connection) : base(connection, "MyDayData")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionType> ActionTypes
        {
            get
            {
                if ((_ActionTypes == null))
                {
                    _ActionTypes = base.CreateObjectSet<ActionType>("ActionTypes");
                }
                return _ActionTypes;
            }
        }
        private ObjectSet<ActionType> _ActionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskStatus> TaskStatuses
        {
            get
            {
                if ((_TaskStatuses == null))
                {
                    _TaskStatuses = base.CreateObjectSet<TaskStatus>("TaskStatuses");
                }
                return _TaskStatuses;
            }
        }
        private ObjectSet<TaskStatus> _TaskStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskType> TaskTypes
        {
            get
            {
                if ((_TaskTypes == null))
                {
                    _TaskTypes = base.CreateObjectSet<TaskType>("TaskTypes");
                }
                return _TaskTypes;
            }
        }
        private ObjectSet<TaskType> _TaskTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionTypes(ActionType actionType)
        {
            base.AddObject("ActionTypes", actionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskStatuses(TaskStatus taskStatus)
        {
            base.AddObject("TaskStatuses", taskStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskTypes(TaskType taskType)
        {
            base.AddObject("TaskTypes", taskType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="actionCode">Initial value of the ActionCode property.</param>
        /// <param name="projectCode">Initial value of the ProjectCode property.</param>
        /// <param name="taskCode">Initial value of the TaskCode property.</param>
        /// <param name="actionTypeCode">Initial value of the ActionTypeCode property.</param>
        /// <param name="fromTime">Initial value of the FromTime property.</param>
        /// <param name="toTime">Initial value of the ToTime property.</param>
        /// <param name="actionComments">Initial value of the ActionComments property.</param>
        public static Action CreateAction(global::System.Int64 actionCode, global::System.String projectCode, global::System.String taskCode, global::System.String actionTypeCode, global::System.DateTime fromTime, global::System.DateTime toTime, global::System.String actionComments)
        {
            Action action = new Action();
            action.ActionCode = actionCode;
            action.ProjectCode = projectCode;
            action.TaskCode = taskCode;
            action.ActionTypeCode = actionTypeCode;
            action.FromTime = fromTime;
            action.ToTime = toTime;
            action.ActionComments = actionComments;
            return action;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ActionCode
        {
            get
            {
                return _ActionCode;
            }
            set
            {
                if (_ActionCode != value)
                {
                    OnActionCodeChanging(value);
                    ReportPropertyChanging("ActionCode");
                    _ActionCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionCode");
                    OnActionCodeChanged();
                }
            }
        }
        private global::System.Int64 _ActionCode;
        partial void OnActionCodeChanging(global::System.Int64 value);
        partial void OnActionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCode
        {
            get
            {
                return _ProjectCode;
            }
            set
            {
                OnProjectCodeChanging(value);
                ReportPropertyChanging("ProjectCode");
                _ProjectCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectCode");
                OnProjectCodeChanged();
            }
        }
        private global::System.String _ProjectCode;
        partial void OnProjectCodeChanging(global::System.String value);
        partial void OnProjectCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskCode
        {
            get
            {
                return _TaskCode;
            }
            set
            {
                OnTaskCodeChanging(value);
                ReportPropertyChanging("TaskCode");
                _TaskCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskCode");
                OnTaskCodeChanged();
            }
        }
        private global::System.String _TaskCode;
        partial void OnTaskCodeChanging(global::System.String value);
        partial void OnTaskCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionTypeCode
        {
            get
            {
                return _ActionTypeCode;
            }
            set
            {
                OnActionTypeCodeChanging(value);
                ReportPropertyChanging("ActionTypeCode");
                _ActionTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionTypeCode");
                OnActionTypeCodeChanged();
            }
        }
        private global::System.String _ActionTypeCode;
        partial void OnActionTypeCodeChanging(global::System.String value);
        partial void OnActionTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromTime
        {
            get
            {
                return _FromTime;
            }
            set
            {
                OnFromTimeChanging(value);
                ReportPropertyChanging("FromTime");
                _FromTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromTime");
                OnFromTimeChanged();
            }
        }
        private global::System.DateTime _FromTime;
        partial void OnFromTimeChanging(global::System.DateTime value);
        partial void OnFromTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToTime
        {
            get
            {
                return _ToTime;
            }
            set
            {
                OnToTimeChanging(value);
                ReportPropertyChanging("ToTime");
                _ToTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToTime");
                OnToTimeChanged();
            }
        }
        private global::System.DateTime _ToTime;
        partial void OnToTimeChanging(global::System.DateTime value);
        partial void OnToTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionComments
        {
            get
            {
                return _ActionComments;
            }
            set
            {
                OnActionCommentsChanging(value);
                ReportPropertyChanging("ActionComments");
                _ActionComments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionComments");
                OnActionCommentsChanged();
            }
        }
        private global::System.String _ActionComments;
        partial void OnActionCommentsChanging(global::System.String value);
        partial void OnActionCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Actions_1_0", "ActionTypes")]
        public ActionType ActionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("MyDayDataModel.FK_Actions_1_0", "ActionTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("MyDayDataModel.FK_Actions_1_0", "ActionTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionType> ActionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("MyDayDataModel.FK_Actions_1_0", "ActionTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionType>("MyDayDataModel.FK_Actions_1_0", "ActionTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="ActionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionType object.
        /// </summary>
        /// <param name="actionTypeCode">Initial value of the ActionTypeCode property.</param>
        public static ActionType CreateActionType(global::System.String actionTypeCode)
        {
            ActionType actionType = new ActionType();
            actionType.ActionTypeCode = actionTypeCode;
            return actionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionTypeCode
        {
            get
            {
                return _ActionTypeCode;
            }
            set
            {
                if (_ActionTypeCode != value)
                {
                    OnActionTypeCodeChanging(value);
                    ReportPropertyChanging("ActionTypeCode");
                    _ActionTypeCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActionTypeCode");
                    OnActionTypeCodeChanged();
                }
            }
        }
        private global::System.String _ActionTypeCode;
        partial void OnActionTypeCodeChanging(global::System.String value);
        partial void OnActionTypeCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Actions_1_0", "Actions")]
        public EntityCollection<Action> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Action>("MyDayDataModel.FK_Actions_1_0", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Action>("MyDayDataModel.FK_Actions_1_0", "Actions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectCode">Initial value of the ProjectCode property.</param>
        public static Project CreateProject(global::System.String projectCode)
        {
            Project project = new Project();
            project.ProjectCode = projectCode;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCode
        {
            get
            {
                return _ProjectCode;
            }
            set
            {
                if (_ProjectCode != value)
                {
                    OnProjectCodeChanging(value);
                    ReportPropertyChanging("ProjectCode");
                    _ProjectCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProjectCode");
                    OnProjectCodeChanged();
                }
            }
        }
        private global::System.String _ProjectCode;
        partial void OnProjectCodeChanging(global::System.String value);
        partial void OnProjectCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_2_0", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("MyDayDataModel.FK_Tasks_2_0", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("MyDayDataModel.FK_Tasks_2_0", "Tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="projectCode">Initial value of the ProjectCode property.</param>
        /// <param name="taskCode">Initial value of the TaskCode property.</param>
        /// <param name="taskTypeCode">Initial value of the TaskTypeCode property.</param>
        /// <param name="taskStatusCode">Initial value of the TaskStatusCode property.</param>
        public static Task CreateTask(global::System.String projectCode, global::System.String taskCode, global::System.String taskTypeCode, global::System.String taskStatusCode)
        {
            Task task = new Task();
            task.ProjectCode = projectCode;
            task.TaskCode = taskCode;
            task.TaskTypeCode = taskTypeCode;
            task.TaskStatusCode = taskStatusCode;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCode
        {
            get
            {
                return _ProjectCode;
            }
            set
            {
                if (_ProjectCode != value)
                {
                    OnProjectCodeChanging(value);
                    ReportPropertyChanging("ProjectCode");
                    _ProjectCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProjectCode");
                    OnProjectCodeChanged();
                }
            }
        }
        private global::System.String _ProjectCode;
        partial void OnProjectCodeChanging(global::System.String value);
        partial void OnProjectCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskCode
        {
            get
            {
                return _TaskCode;
            }
            set
            {
                if (_TaskCode != value)
                {
                    OnTaskCodeChanging(value);
                    ReportPropertyChanging("TaskCode");
                    _TaskCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TaskCode");
                    OnTaskCodeChanged();
                }
            }
        }
        private global::System.String _TaskCode;
        partial void OnTaskCodeChanging(global::System.String value);
        partial void OnTaskCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskTypeCode
        {
            get
            {
                return _TaskTypeCode;
            }
            set
            {
                OnTaskTypeCodeChanging(value);
                ReportPropertyChanging("TaskTypeCode");
                _TaskTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskTypeCode");
                OnTaskTypeCodeChanged();
            }
        }
        private global::System.String _TaskTypeCode;
        partial void OnTaskTypeCodeChanging(global::System.String value);
        partial void OnTaskTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskStatusCode
        {
            get
            {
                return _TaskStatusCode;
            }
            set
            {
                OnTaskStatusCodeChanging(value);
                ReportPropertyChanging("TaskStatusCode");
                _TaskStatusCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskStatusCode");
                OnTaskStatusCodeChanged();
            }
        }
        private global::System.String _TaskStatusCode;
        partial void OnTaskStatusCodeChanging(global::System.String value);
        partial void OnTaskStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedEffortHours
        {
            get
            {
                return _EstimatedEffortHours;
            }
            set
            {
                OnEstimatedEffortHoursChanging(value);
                ReportPropertyChanging("EstimatedEffortHours");
                _EstimatedEffortHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedEffortHours");
                OnEstimatedEffortHoursChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedEffortHours;
        partial void OnEstimatedEffortHoursChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedEffortHoursChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_2_0", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("MyDayDataModel.FK_Tasks_2_0", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("MyDayDataModel.FK_Tasks_2_0", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("MyDayDataModel.FK_Tasks_2_0", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("MyDayDataModel.FK_Tasks_2_0", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_0_0", "TaskStatuses")]
        public TaskStatus TaskStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("MyDayDataModel.FK_Tasks_0_0", "TaskStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("MyDayDataModel.FK_Tasks_0_0", "TaskStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskStatus> TaskStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("MyDayDataModel.FK_Tasks_0_0", "TaskStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskStatus>("MyDayDataModel.FK_Tasks_0_0", "TaskStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_1_0", "TaskTypes")]
        public TaskType TaskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MyDayDataModel.FK_Tasks_1_0", "TaskTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MyDayDataModel.FK_Tasks_1_0", "TaskTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskType> TaskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("MyDayDataModel.FK_Tasks_1_0", "TaskTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskType>("MyDayDataModel.FK_Tasks_1_0", "TaskTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="TaskStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskStatus object.
        /// </summary>
        /// <param name="taskStatusCode">Initial value of the TaskStatusCode property.</param>
        public static TaskStatus CreateTaskStatus(global::System.String taskStatusCode)
        {
            TaskStatus taskStatus = new TaskStatus();
            taskStatus.TaskStatusCode = taskStatusCode;
            return taskStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskStatusCode
        {
            get
            {
                return _TaskStatusCode;
            }
            set
            {
                if (_TaskStatusCode != value)
                {
                    OnTaskStatusCodeChanging(value);
                    ReportPropertyChanging("TaskStatusCode");
                    _TaskStatusCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TaskStatusCode");
                    OnTaskStatusCodeChanged();
                }
            }
        }
        private global::System.String _TaskStatusCode;
        partial void OnTaskStatusCodeChanging(global::System.String value);
        partial void OnTaskStatusCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_0_0", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("MyDayDataModel.FK_Tasks_0_0", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("MyDayDataModel.FK_Tasks_0_0", "Tasks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyDayDataModel", Name="TaskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskType object.
        /// </summary>
        /// <param name="taskTypeCode">Initial value of the TaskTypeCode property.</param>
        public static TaskType CreateTaskType(global::System.String taskTypeCode)
        {
            TaskType taskType = new TaskType();
            taskType.TaskTypeCode = taskTypeCode;
            return taskType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskTypeCode
        {
            get
            {
                return _TaskTypeCode;
            }
            set
            {
                if (_TaskTypeCode != value)
                {
                    OnTaskTypeCodeChanging(value);
                    ReportPropertyChanging("TaskTypeCode");
                    _TaskTypeCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TaskTypeCode");
                    OnTaskTypeCodeChanged();
                }
            }
        }
        private global::System.String _TaskTypeCode;
        partial void OnTaskTypeCodeChanging(global::System.String value);
        partial void OnTaskTypeCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyDayDataModel", "FK_Tasks_1_0", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("MyDayDataModel.FK_Tasks_1_0", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("MyDayDataModel.FK_Tasks_1_0", "Tasks", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
